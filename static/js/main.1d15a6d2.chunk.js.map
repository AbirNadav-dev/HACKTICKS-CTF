{"version":3,"sources":["pages/level1.js","pages/level2.js","pages/Note.js","App.js","reportWebVitals.js","index.js"],"names":["Level1","props","className","onClick","window","location","replace","hash","Level2","useState","res4","Note","BasicExample","to","href","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAqBeA,MAnBf,SAAgBC,GAUZ,OACI,sBAAKC,UAAU,SAAf,UACI,yCACA,8CACA,wBAAQC,QAThB,WACIC,OAAOC,SAASC,QAAQF,OAAOC,SAASE,KAAKD,QAAQ,IAAK,MAQtD,mC,OCaGE,MA3Bf,SAAgBP,GAEZ,MAA0BQ,mBAAS,mBAAnC,mBAgBA,OAhBA,UAiBI,sBAAKP,UAAU,SAAf,UACI,yCACA,wEACA,wBAAQC,QAjBhB,WAEI,IAIIO,EAJcN,OAAOC,SAASE,KAAKD,QAAQ,IAAK,IAC/BA,QAAQ,cAAe,IAC5BA,QAAQ,IAAK,IACdA,QAAQ,IAAK,IACbA,QAAQ,IAAK,IAG5BF,OAAOC,SAASC,QAAQI,IAQpB,mCCPGC,MAff,SAAcV,GAOV,OACI,sBAAKC,UAAU,SAAf,UACI,8CACA,sDCOG,SAASU,IAItB,OAEE,cAAC,IAAD,UACE,sBAAKV,UAAU,YAAf,UACE,sBAAKA,UAAU,SAAf,UAEE,uDACA,sBAAKA,UAAU,SAAf,UAEE,cAAC,IAAD,CAAMW,GAAG,0BAAT,qBACA,cAAC,IAAD,CAAMA,GAAG,0BAAT,qBAEA,mBAAGC,KAAK,mBAAR,yBAYJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,wBAAwBC,QAAS,cAAC,EAAD,MAE7C,cAAC,IAAD,CAAOD,KAAK,wBAAwBC,QAAS,cAAC,EAAD,MAE7C,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,cCpDnC,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d15a6d2.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nfunction Level1(props) {\r\n\r\n\r\n\r\n\r\n    function s() {\r\n        window.location.replace(window.location.hash.replace('#', ''))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"level1\">\r\n            <h1>Level 1</h1>\r\n            <h1>Find the XSS</h1>\r\n            <button onClick={s}>Execute Something</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Level1;\r\n","import { useState } from \"react\"\r\n\r\nfunction Level2(props) {\r\n\r\n    const [state, setState] = useState('FLAG{HACKTICKS}');\r\n\r\n\r\n    function s() {\r\n\r\n        const cleanHash = window.location.hash.replace('#', '')\r\n        let res1 = cleanHash.replace('javascript:', '')\r\n        let res2 = res1.replace('<', '')\r\n        let res3 =res2.replace('>', '')\r\n        let res4 =res3.replace('%', '')\r\n\r\n\r\n        window.location.replace(res4)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"level2\">\r\n            <h1>Level 2</h1>\r\n            <h1>Find the XSS And bypass the Protection</h1>\r\n            <button onClick={s}>Execute Something</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Level2;\r\n","import { useEffect } from \"react\";\r\n\r\nfunction Note(props) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"level1\">\r\n            <h1>Thanks for #</h1>\r\n            <h1>The flag is ####</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Note;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Level1 from './pages/level1.js'\nimport Level2 from './pages/level2.js'\nimport Note from './pages/Note'\n// This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n\nexport default function BasicExample() {\n\n\n\n  return (\n\n    <Router>\n      <div className=\"container\">\n        <div className=\"header\">\n\n          <h1>DOM-Invader Challenge</h1>\n          <div className=\"router\">\n\n            <Link to=\"/HACKTICKS-CTF/level1/#\">Level 1</Link>\n            <Link to=\"/HACKTICKS-CTF/level2/#\">Level 2</Link>\n\n            <a href=\"/HACKTICKS-CTF/#\">what?</a>\n          </div>\n        </div>\n\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Routes>\n          <Route path=\"/HACKTICKS-CTF/level1\" element={<Level1 />} >\n          </Route>\n          <Route path=\"/HACKTICKS-CTF/level2\" element={<Level2 />} >\n          </Route>\n          <Route path=\"/\" element={<Note />} >\n          </Route>\n\n        </Routes>\n      </div>\n    </Router>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}